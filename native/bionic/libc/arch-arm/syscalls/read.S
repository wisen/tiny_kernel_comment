/* Generated by gensyscalls.py. Do not edit. */

#include <private/bionic_asm.h>

ENTRY(read)
    mov     ip, r7
    .cfi_register r7, ip
    ldr     r7, =__NR_read
    swi     #0
	//使用汇编指令swi进入软中断，其实arm已经将swi指令换成了svc，在64位的read.S上已经换成了svc
	//swi之后，在内核的中断向量表中找到对应的软中断处理函数vector_swi,然后调用具体的服务函数
	//在entry-common.S中定义了vector_swi
    mov     r7, ip
    .cfi_restore r7
    cmn     r0, #(MAX_ERRNO + 1)
    bxls    lr
    neg     r0, r0
    b       __set_errno_internal
END(read)
